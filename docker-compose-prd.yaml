version: "3.3"

services:
  postgres:
    container_name: postgres
    image: postgres:15.3-alpine3.18
    restart: on-failure
    ports:
      - 15432:5432
    #TODO: .env 파일로 변경
    environment:
      - POSTGRES_USER=acbook
      - POSTGRES_PASSWORD=acbook
      - POSTGRES_DB=acbook
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./postgres-sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ab_net

  app-web-1: &app-web
    container_name: app-web-1
    build:
      context: ./web
      dockerfile: DockerFile.prd
    restart: "on-failure"
    hostname: localhost
    volumes:
      - ./ssh:/root/.ssh
    environment:
      - NODE_ENV=production
      - WEB_PORT=81
    ports:
      - 10001:22
      - 81:81
    entrypoint: ["/entrypoint.sh"]
    stdin_open: true
    tty: true
    networks:
      - ab_net
    depends_on:
      - app-server-1
      - app-server-2

  app-web-2:
    <<: *app-web
    container_name: app-web-2
    ports:
      - 10002:22
      - 82:81
    environment:
      - WEB_PORT=82
    depends_on:
      - app-server-1
      - app-server-2
    
  app-server-1: &app-server
    container_name: app-server-1
    build:
      context: ./server
      dockerfile: DockerFile.prd
    restart: on-failure
    volumes:
      - ./ssh:/root/.ssh
      - ./upload:/upload
    ports:
      - 20001:22
    working_dir: /back
    environment:
      - SPRING_PROFILES_ACTIVE=prd
      - WAS_PORT=8081
      - VERSION=1.0
    entrypoint: ["/entrypoint.sh"]
    networks:
      - ab_net
    depends_on:
      - postgres

  app-server-2:
    <<: *app-server
    container_name: app-server-2
    ports:
      - 20002:22
    environment:
      - WAS_PORT=8082
    depends_on:
      - postgres
    
  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile.prd
    volumes:
      - ./ssh:/root/.ssh
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    entrypoint: ["/entrypoint.sh"]
    ports:
      - 80:80
    depends_on:
      - app-web-1
      - app-web-2
    networks:
      - ab_net
  jenkins:
    container_name: ab-jenkins
    image: jiseok1378/ab-jenkins:latest
    restart: on-failure
    ports:
      - 20000:8080
    networks:
      - ab_net
    volumes:
      - ./build-script:/var/lib/jenkins/build-script
    command: >
      sh -c "chmod 777 /var/lib/jenkins/build-script/* &&
      rm /var/lib/jenkins/.ssh/known_hosts &&
      echo "$$(ssh-keyscan -t rsa,dsa github.com)" >> /var/lib/jenkins/.ssh/known_hosts &&
      service ssh restart &&
      service jenkins restart &&
      tail -f /var/log/jenkins/jenkins.log"

networks:
  ab_net:
    driver: bridge
